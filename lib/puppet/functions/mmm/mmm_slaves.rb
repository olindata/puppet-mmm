# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----

# ---- original file header ----
#
# @summary
#   Summarise what the function does here
#
Puppet::Functions.create_function(:'mmm::mmm_slaves') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    
    raise Puppet::ParseError, "Expected 1 argument, got #{args.size}" if args.size != 1
    raise Puppet::ParseError, "Must pass either a hostname or an array of hostnames" if args[0].empty?

    hostnames = args[0]
    ips       = []

    hostnames = [ hostnames ] if not hostnames.is_a? Array

    hostnames.each do |hostname|
      ip = `cat /etc/hosts | grep #{hostname} | head -1 | awk '{print $1}' | xargs echo -n`

      ips << {
        "host" => hostname,
        "ip"   => ip
      }
    end

    return ips
  
  end
end
